local M = {}

local utils = require("oscura.utils")
local colors_module = require("oscura.colors")

-- Setup the theme
function M.setup(config)
	local colors = colors_module.get_colors(config)

	-- Set terminal colors
	if config.terminal_colors then
		utils.set_terminal_colors(colors)
	end

	-- Editor
	utils.highlight("Normal", { fg = colors.fg, bg = colors.bg })
	utils.highlight("NormalFloat", { fg = colors.fg, bg = colors.bg_float })
	utils.highlight("FloatBorder", { fg = colors.border, bg = colors.bg_float })
	utils.highlight("ColorColumn", { bg = colors.bg_highlight })
	utils.highlight("Cursor", { fg = colors.bg, bg = colors.fg })
	utils.highlight("CursorColumn", { bg = colors.bg_highlight })
	utils.highlight("CursorLine", { bg = colors.bg_highlight })
	utils.highlight("CursorLineNr", { fg = colors.fg })
	utils.highlight("LineNr", { fg = colors.fg_gutter })
	utils.highlight("MatchParen", { fg = colors.red, bg = colors.bg_highlight, bold = true })
	utils.highlight("SignColumn", { fg = colors.fg_gutter, bg = colors.bg })
	utils.highlight("VertSplit", { fg = colors.border })
	utils.highlight("Folded", { fg = colors.purple, bg = colors.bg_highlight })
	utils.highlight("FoldColumn", { fg = colors.comment, bg = colors.bg })
	utils.highlight("Whitespace", { fg = colors.comment })
	utils.highlight("NonText", { fg = colors.comment })
	utils.highlight("SpecialKey", { fg = colors.comment })
	utils.highlight("EndOfBuffer", { fg = colors.bg })

	-- Pmenu
	utils.highlight("Pmenu", { fg = colors.fg, bg = colors.bg_popup })
	utils.highlight("PmenuSel", { fg = colors.fg, bg = colors.bg_highlight })
	utils.highlight("PmenuSbar", { bg = colors.bg_popup })
	utils.highlight("PmenuThumb", { bg = colors.dark5 })
	utils.highlight("WildMenu", { fg = colors.fg, bg = colors.bg_highlight })

	-- Search
	utils.highlight("Search", { fg = colors.bg, bg = colors.yellow })
	utils.highlight("IncSearch", { fg = colors.bg, bg = colors.orange })
	utils.highlight("Substitute", { fg = colors.bg, bg = colors.green })
	utils.highlight("CurSearch", { fg = colors.bg, bg = colors.green })

	-- Visual
	utils.highlight("Visual", { bg = colors.bg_visual })
	utils.highlight("VisualNOS", { bg = colors.bg_visual })

	-- Statuses
	utils.highlight("StatusLine", { fg = colors.fg_sidebar, bg = colors.bg_statusline })
	utils.highlight("StatusLineNC", { fg = colors.comment, bg = colors.bg_statusline })
	utils.highlight("WinBar", { fg = colors.fg_sidebar, bg = colors.bg })
	utils.highlight("WinBarNC", { fg = colors.comment, bg = colors.bg })
	utils.highlight("TabLine", { fg = colors.comment, bg = colors.bg_statusline })
	utils.highlight("TabLineFill", { bg = colors.bg_statusline })
	utils.highlight("TabLineSel", { fg = colors.fg, bg = colors.bg_highlight })

	-- Popup/Float
	utils.highlight("Question", { fg = colors.yellow })
	utils.highlight("Title", { fg = colors.green2 })
	utils.highlight("Directory", { fg = colors.green2 })
	utils.highlight("MoreMsg", { fg = colors.green })
	utils.highlight("ModeMsg", { fg = colors.fg, bold = true })
	utils.highlight("WarningMsg", { fg = colors.warning })
	utils.highlight("ErrorMsg", { fg = colors.red1 })

	-- Diagnostics
	utils.highlight("DiagnosticError", { fg = colors.red1 })
	utils.highlight("DiagnosticWarn", { fg = colors.warning })
	utils.highlight("DiagnosticInfo", { fg = colors.info })
	utils.highlight("DiagnosticHint", { fg = colors.hint })
	utils.highlight("DiagnosticUnderlineError", { sp = colors.red1, undercurl = true })
	utils.highlight("DiagnosticUnderlineWarn", { sp = colors.warning, undercurl = true })
	utils.highlight("DiagnosticUnderlineInfo", { sp = colors.info, undercurl = true })
	utils.highlight("DiagnosticUnderlineHint", { sp = colors.hint, undercurl = true })

	-- Syntax
	utils.highlight("Comment", { fg = colors.comment, italic = config.styles.comments.italic })
	utils.highlight("Constant", { fg = colors.orange })
	utils.highlight("String", { fg = colors.fg })
	utils.highlight("Character", { fg = colors.orange })
	utils.highlight("Number", { fg = colors.orange })
	utils.highlight("Boolean", { fg = colors.orange })
	utils.highlight("Float", { fg = colors.orange })
	utils.highlight("Identifier", { fg = colors.fg })
	utils.highlight("Function", { fg = colors.yellow, bold = config.styles.functions.bold })
	utils.highlight("Statement", { fg = colors.purple })
	utils.highlight("Conditional", { fg = colors.purple })
	utils.highlight("Repeat", { fg = colors.purple })
	utils.highlight("Label", { fg = colors.purple })
	utils.highlight("Operator", { fg = colors.purple })
	utils.highlight("Keyword", { fg = colors.purple, italic = config.styles.keywords.italic })
	utils.highlight("Exception", { fg = colors.purple })
	utils.highlight("PreProc", { fg = colors.purple })
	utils.highlight("Include", { fg = colors.purple })
	utils.highlight("Define", { fg = colors.purple })
	utils.highlight("Macro", { fg = colors.purple })
	utils.highlight("PreCondit", { fg = colors.purple })
	utils.highlight("Type", { fg = colors.yellow })
	utils.highlight("StorageClass", { fg = colors.purple })
	utils.highlight("Structure", { fg = colors.purple })
	utils.highlight("Typedef", { fg = colors.purple })
	utils.highlight("Special", { fg = colors.blue })
	utils.highlight("SpecialChar", { fg = colors.orange })
	utils.highlight("Tag", { fg = colors.yellow })
	utils.highlight("Delimiter", { fg = colors.brackets[1] })
	utils.highlight("SpecialComment", { fg = colors.comment, italic = config.styles.comments.italic })
	utils.highlight("Debug", { fg = colors.red })
	utils.highlight("Underlined", { underline = true })
	utils.highlight("Error", { fg = colors.red1 })
	utils.highlight("Todo", { fg = colors.yellow, bold = true, italic = true })

	-- Bracket highlighting
	utils.highlight("TSRainbowRed", { fg = colors.brackets[1] })
	utils.highlight("TSRainbowYellow", { fg = colors.brackets[2] })
	utils.highlight("TSRainbowBlue", { fg = colors.brackets[3] })
	utils.highlight("TSRainbowOrange", { fg = colors.brackets[4] })
	utils.highlight("TSRainbowGreen", { fg = colors.brackets[5] })
	utils.highlight("TSRainbowViolet", { fg = colors.brackets[6] })
	utils.highlight("TSRainbowCyan", { fg = colors.brackets[1] })

	-- Treesitter
	utils.highlight("@attribute", { fg = colors.cyan })
	utils.highlight("@boolean", { fg = colors.orange })
	utils.highlight("@character", { fg = colors.orange })
	utils.highlight("@comment", { fg = colors.comment, italic = config.styles.comments.italic })
	utils.highlight("@constructor", { fg = colors.yellow })
	utils.highlight("@constant", { fg = colors.orange })
	utils.highlight("@constant.builtin", { fg = colors.orange })
	utils.highlight("@constant.macro", { fg = colors.orange })
	utils.highlight("@error", { fg = colors.red1 })
	utils.highlight("@exception", { fg = colors.purple })
	utils.highlight("@field", { fg = colors.fg })
	utils.highlight("@float", { fg = colors.orange })
	utils.highlight("@function", { fg = colors.yellow, bold = config.styles.functions.bold })
	utils.highlight("@function.builtin", { fg = colors.yellow })
	utils.highlight("@function.macro", { fg = colors.yellow })
	utils.highlight("@include", { fg = colors.purple })
	utils.highlight("@keyword", { fg = colors.purple, italic = config.styles.keywords.italic })
	utils.highlight("@keyword.function", { fg = colors.purple })
	utils.highlight("@keyword.operator", { fg = colors.purple })
	utils.highlight("@label", { fg = colors.purple })
	utils.highlight("@method", { fg = colors.yellow })
	utils.highlight("@namespace", { fg = colors.yellow })
	utils.highlight("@number", { fg = colors.orange })
	utils.highlight("@operator", { fg = colors.purple })
	utils.highlight("@parameter", { fg = colors.fg })
	utils.highlight("@parameter.reference", { fg = colors.fg })
	utils.highlight("@property", { fg = colors.fg })
	utils.highlight("@punctuation.bracket", { fg = colors.brackets[1] })
	utils.highlight("@punctuation.delimiter", { fg = colors.brackets[1] })
	utils.highlight("@punctuation.special", { fg = colors.purple })
	utils.highlight("@repeat", { fg = colors.purple })
	utils.highlight("@string", { fg = colors.fg })
	utils.highlight("@string.escape", { fg = colors.purple })
	utils.highlight("@string.regex", { fg = colors.purple })
	utils.highlight("@string.special", { fg = colors.orange })
	utils.highlight("@symbol", { fg = colors.fg })
	utils.highlight("@tag", { fg = colors.yellow })
	utils.highlight("@tag.attribute", { fg = colors.cyan })
	utils.highlight("@tag.delimiter", { fg = colors.purple })
	utils.highlight("@text", { fg = colors.fg })
	utils.highlight("@text.strong", { bold = true })
	utils.highlight("@text.emphasis", { italic = true })
	utils.highlight("@text.underline", { underline = true })
	utils.highlight("@text.strike", { strikethrough = true })
	utils.highlight("@text.title", { fg = colors.yellow, bold = true })
	utils.highlight("@text.literal", { fg = colors.fg })
	utils.highlight("@text.uri", { fg = colors.blue, underline = true })
	utils.highlight("@text.math", { fg = colors.fg })
	utils.highlight("@text.reference", { fg = colors.blue })
	utils.highlight("@text.environment", { fg = colors.purple })
	utils.highlight("@text.environment.name", { fg = colors.yellow })
	utils.highlight("@type", { fg = colors.yellow })
	utils.highlight("@type.builtin", { fg = colors.yellow })
	utils.highlight("@variable", { fg = colors.fg })
	utils.highlight("@variable.builtin", { fg = colors.purple })

	-- LSP
	utils.highlight("LspReferenceText", { bg = colors.bg_highlight })
	utils.highlight("LspReferenceRead", { bg = colors.bg_highlight })
	utils.highlight("LspReferenceWrite", { bg = colors.bg_highlight })
	utils.highlight("LspCodeLens", { fg = colors.comment })
	utils.highlight("LspInfoBorder", { fg = colors.border, bg = colors.bg_float })

	-- Git
	utils.highlight("gitcommitOverflow", { fg = colors.red })
	utils.highlight("gitcommitSummary", { fg = colors.green })
	utils.highlight("gitcommitComment", { fg = colors.comment })
	utils.highlight("gitcommitUntracked", { fg = colors.comment })
	utils.highlight("gitcommitDiscarded", { fg = colors.comment })
	utils.highlight("gitcommitSelected", { fg = colors.comment })
	utils.highlight("gitcommitHeader", { fg = colors.purple })
	utils.highlight("gitcommitSelectedType", { fg = colors.blue })
	utils.highlight("gitcommitUnmergedType", { fg = colors.blue })
	utils.highlight("gitcommitDiscardedType", { fg = colors.blue })
	utils.highlight("gitcommitBranch", { fg = colors.purple, bold = true })
	utils.highlight("gitcommitUntrackedFile", { fg = colors.yellow })
	utils.highlight("gitcommitUnmergedFile", { fg = colors.red, bold = true })
	utils.highlight("gitcommitDiscardedFile", { fg = colors.red, bold = true })
	utils.highlight("gitcommitSelectedFile", { fg = colors.green, bold = true })

	-- diff
	utils.highlight("diffAdded", { fg = colors.green })
	utils.highlight("diffRemoved", { fg = colors.red })
	utils.highlight("diffChanged", { fg = colors.blue })
	utils.highlight("diffOldFile", { fg = colors.yellow })
	utils.highlight("diffNewFile", { fg = colors.yellow })
	utils.highlight("diffFile", { fg = colors.blue })
	utils.highlight("diffLine", { fg = colors.comment })
	utils.highlight("diffIndexLine", { fg = colors.purple })

	-- Gitsigns
	utils.highlight("GitSignsAdd", { fg = colors.green })
	utils.highlight("GitSignsChange", { fg = colors.blue })
	utils.highlight("GitSignsDelete", { fg = colors.red })
	utils.highlight("GitSignsAddNr", { fg = colors.green })
	utils.highlight("GitSignsChangeNr", { fg = colors.blue })
	utils.highlight("GitSignsDeleteNr", { fg = colors.red })
	utils.highlight("GitSignsAddLn", { bg = colors.delta.add })
	utils.highlight("GitSignsChangeLn", { bg = colors.delta.add })
	utils.highlight("GitSignsDeleteLn", { bg = colors.delta.delete })

	-- NvimTree
	utils.highlight("NvimTreeNormal", { fg = colors.fg_sidebar, bg = colors.bg_sidebar })
	utils.highlight("NvimTreeRootFolder", { fg = colors.blue, bold = true })
	utils.highlight("NvimTreeGitDirty", { fg = colors.yellow })
	utils.highlight("NvimTreeGitNew", { fg = colors.green })
	utils.highlight("NvimTreeGitStaged", { fg = colors.purple })
	utils.highlight("NvimTreeGitDeleted", { fg = colors.red })
	utils.highlight("NvimTreeSpecialFile", { fg = colors.orange, underline = true })
	utils.highlight("NvimTreeIndentMarker", { fg = colors.comment })
	utils.highlight("NvimTreeOpenedFolderName", { fg = colors.fg_sidebar })
	utils.highlight("NvimTreeSymlink", { fg = colors.cyan, underline = true })
	utils.highlight("NvimTreeFolderName", { fg = colors.fg_sidebar })
	utils.highlight("NvimTreeCursorLine", { bg = colors.bg_highlight })

	-- Telescope
	utils.highlight("TelescopeNormal", { fg = colors.fg, bg = colors.bg_float })
	utils.highlight("TelescopeBorder", { fg = colors.border, bg = colors.bg_float })
	utils.highlight("TelescopePromptBorder", { fg = colors.border, bg = colors.bg_float })
	utils.highlight("TelescopeResultsBorder", { fg = colors.border, bg = colors.bg_float })
	utils.highlight("TelescopePreviewBorder", { fg = colors.border, bg = colors.bg_float })
	utils.highlight("TelescopeMatching", { fg = colors.yellow, bold = true })
	utils.highlight("TelescopeSelection", { fg = colors.fg, bg = colors.bg_highlight })
	utils.highlight("TelescopePromptPrefix", { fg = colors.blue })

	-- Dashboard
	utils.highlight("DashboardShortCut", { fg = colors.cyan })
	utils.highlight("DashboardHeader", { fg = colors.yellow })
	utils.highlight("DashboardCenter", { fg = colors.green })
	utils.highlight("DashboardFooter", { fg = colors.purple, italic = true })

	-- WhichKey
	utils.highlight("WhichKey", { fg = colors.cyan })
	utils.highlight("WhichKeyGroup", { fg = colors.blue })
	utils.highlight("WhichKeyDesc", { fg = colors.purple })
	utils.highlight("WhichKeySeperator", { fg = colors.comment })
	utils.highlight("WhichKeyFloat", { bg = colors.bg_float })
	utils.highlight("WhichKeyValue", { fg = colors.comment })
end
